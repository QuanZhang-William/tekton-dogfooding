apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: send-basic-comment-github-event-listener
spec:
  triggers:
    - name: send-basic-comment-github-trigger-with-interceptors
      interceptors:
      - ref:  # This interceptor filters the event types
          name: "github"
        params:
        - name: "eventTypes"
          value: ["pull_request_review_comment", "issue_comment"]
      - ref:  # This interceptor filters the comment prefix
          name: "cel"
        params:
        - name: "filter"
          value: "body.comment.body.truncate(10) == '/quan-test'"
        - name: "overlays"
          value:
          - key: truncated_based
            expression: "body.comment.body.split(' ')[1]"
          - key: truncated_sha
            expression: "body.comment.body.split(' ')[2]"
      bindings: # Use a binding here to respond corresponding message
      - name: echo_text
        value: $(extensions.short_sha)
      template:
        ref: send-basic-comment-github-template
    - name: pull-build-test-trigger-with-interceptors
      interceptors:
      - ref:
          name: "github"
        params:
        - name: "eventTypes"
          value: ["issue_comment"]
      - ref:
          name: "cel"
        params:
        - name: "filter"
          value: "body.comment.body.truncate(16) == '/pull-build-test'"
      template:
        ref: send-basic-comment-github-template
    - name: open-pr-check-trigger
      interceptors:
      - ref:
          name: "github"
        params:
        - name: "eventTypes"
          value: ["pull_request"]
      - ref:
          name: "cel"
        params:
        - name: "filter"
          value: "body.action == 'opened'"
      template:
        ref: send-github-check-template
      bindings: # Use a binding here to respond corresponding message
      - name: repo-full-name
        value: $(body.repository.full_name)
      - name: git-sha
        value: $(body.pull_request.head.sha)
    - name: pull-integration-test
      interceptors:
      - ref:  # This interceptor filters the event types
          name: "github"
        params:
        - name: "eventTypes"
          value: ["issue_comment"]
      - ref:  # This interceptor filters the comment prefix
          name: "cel"
        params:
        - name: "filter"
          value: "body.comment.body.truncate(22) == '/pull-integration-test'"
        - name: "overlays"
          value:
          - key: truncated_based
            expression: "body.comment.body.split(' ')[1]"
          - key: truncated_sha
            expression: "body.comment.body.split(' ')[2]"
      template:
        ref: catalog-integration-test-template
      bindings:
      - name: repo-full-name
        value: $(body.repository.full_name)
      - name: git-sha
        value: $(extensions.truncated_sha)
      - name: checkrun-name
        value: catalog-integration-test
      - name: pullRequestNumber
        value: $(body.issue.number)
      - name: pullRequestBaseRef
        value: $(extensions.truncated_based)
      - name: gitRepository
        value: $(body.repository.html_url)
      - name: e2e-env
        value: ./test/e2e-kind.env
    - name: open-pr-build-test
      interceptors:
      - ref:
          name: "github"
        params:
        - name: "eventTypes"
          value: ["pull_request"]
      - ref:
          name: "cel"
        params:
        - name: "filter"
          value: "body.action in ['opened', 'synchronize', 'reopened']"
      template:
        ref: catalog-build-test-template
      bindings:
      - name: repo-full-name
        value: $(body.repository.full_name)
      - name: git-sha
        value: $(body.pull_request.head.sha)
      - name: check-run-name
        value: catalog-build-test
      - name: gitCloneDepth
        value: $(body.pull_request.commits)
      - name: pullRequestUrl
        value: $(body.pull_request.url)
      - name: pullRequestNumber
        value: $(body.number)
      - name: pullRequestBaseRef
        value: $(body.pull_request.base.ref)
      - name: gitRepository
        value: $(body.repository.html_url)
  resources:
    kubernetesResource:
      serviceType: LoadBalancer
      spec:
        template:
          spec:
            serviceAccountName: send-basic-comment-github-sa